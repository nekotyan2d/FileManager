name: Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_run:
    workflows: ["Update version"]
    types:
      - completed

jobs:
  build:
    runs-on: windows-latest

    env:
      QT_VERSION: 6.9.0
      QT_DIR: C:\Qt\6.9.0\mingw_64
      QT_MIRROR: https://qt-mirror.dannhauer.de/online/qtsdkrepository/windows_x86/desktop/qt6_690/qt6_690/qt.qt6.690.win64_mingw

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Qt
        run: |
          curl -L -o qtbase.7z ${{ env.QT_MIRROR }}/6.9.0-0-202503301022qtbase-Windows-Windows_10_22H2-Mingw-Windows-Windows_10_22H2-X86_64.7z
          curl -L -o qttools.7z ${{ env.QT_MIRROR }}//6.9.0-0-202503301022qttools-Windows-Windows_10_22H2-Mingw-Windows-Windows_10_22H2-X86_64.7z
          curl -L -o qtsvg.7z ${{ env.QT_MIRROR }}//6.9.0-0-202503301022qtsvg-Windows-Windows_10_22H2-Mingw-Windows-Windows_10_22H2-X86_64.7z
          curl -L -o extra.7z ${{ env.QT_MIRROR }}//6.9.0-0-202503301022MinGW-w64-x86_64-13.1.0-release-posix-seh-msvcrt-rt_v11-rev1-runtime.7z
     
      - name: Extract files
        run: |
          7z x qtbase.7z -o${{ env.QT_DIR }}
          7z x qttools.7z -o${{ env.QT_DIR }}
          7z x qtsvg.7z -o${{ env.QT_DIR }}
          7z x extra.7z -o${{ env.QT_DIR }}\bin

      - name: Add MSYS2 to PATH
        uses: msys2/setup-msys2@v2
        with:
          update: false
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake

      - name: Configure CMake
        shell: msys2 {0}
        run: |
          cmake -S . -B build -G "MinGW Makefiles" -DCMAKE_PREFIX_PATH="${QT_DIR}"

      - name: Build
        shell: msys2 {0}
        run: |
          cmake --build build --config Release --target all -j 14

      - name: Run windeployqt
        shell: cmd
        run: |
          "${{ env.QT_DIR }}\bin\windeployqt6.exe" --compiler-runtime --release --dir build\bin build\bin\FileManager.exe

      - name: Create archive
        run: |
          Compress-Archive -Path build\bin\* -DestinationPath FileManager-win.zip

      - name: Get version
        id: get_version
        shell: pwsh
        run: |
          $version = Select-String '#define VERSION "' version.h | ForEach-Object {
            ($_ -match '"(\d+\.\d+\.\d+)"') | Out-Null
            $matches[1]
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Create changelog diff
        id: changelog_diff
        shell: pwsh
        run: |
          $ver = "${{ steps.get_version.outputs.version }}"
          $lines = Get-Content CHANGELOG.md
          $start = ($lines | Select-String "^## \[$ver\]" | Select-Object -First 1).LineNumber
          $end = ($lines | Select-String "^## \[" | Where-Object { $_.LineNumber -gt $start } | Select-Object -First 1).LineNumber
          if ($start -and $end) {
            $lines[($start)..($end-2)] | Set-Content release_notes.md
          } elseif ($start) {
            $lines[($start)..($lines.Length-1)] | Set-Content release_notes.md
          } else {
            "Version $ver." | Set-Content release_notes.md
          }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          files: FileManager-win.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete release_notes file
        run: rm release_notes.md